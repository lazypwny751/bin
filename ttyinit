#!/usr/bin/env bash
DIR="$( cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
LIB="$DIR/lib/bash"
source "$LIB/colors"

show_menu() {
    local error="$1"

    echo "${MAGENTA}Choose a session:${NC}"
    echo "${BLUE}--> (${YELLOW}c${BLUE})${CYAN}wn"
    echo "${BLUE}--> (${YELLOW}e${BLUE})${CYAN}macs"
    echo "${BLUE}--> (${YELLOW}j${BLUE})${CYAN}wn"
    echo "${BLUE}--> (${YELLOW}o${BLUE})${CYAN}penbox"
    echo "${BLUE}--> (${YELLOW}r${BLUE})${CYAN}atpoison"
    echo "${BLUE}--> (${YELLOW}s${BLUE})${CYAN}tumpwm"
    echo "${BLUE}--> (${YELLOW}t${BLUE})${CYAN}mux"
    echo "${BLUE}--> (${YELLOW}x${BLUE})${CYAN}fce"
    echo "${BLUE}--> (${YELLOW}q${BLUE})${CYAN}uit"
    [[ -n "$error" ]] && echo "${RED}$error${NC}"
    read -n 1 -rep "${BLUE}--> ${NC}" opt # -n 2 option means no carriage return necessary
}

ttyinit() {
    local error=""

    until [[ $opt == [qQ] ]]; do  # keep asking until q
        clear
        show_menu "$error"
        case $opt in
            c|C)
                startx $(command -v cwm)
                break
                ;;
            e|E)
                emacsclient --tty --create-frame -a ""
                ;;
            f|F)
                startx $(command -v fvwm)
                ;;
            j|J)
                startx $(command -v jwm)
                break
                ;;
            o|O)
                startx $(command -v openbox-session)
                break
                ;;
            r|R)
                startx $(command -v ratpoison)
                break
                ;;
            s|S)
                startx "$(sbcl --eval '(require :stumpwm)' --eval '(stumpwm:stumpwm)')"
                break
                ;;
            t|T)
                tmux -q has-session && tmux attach -d || tmux -u
                ;;
            x|X)
                startxfce4
                break
                ;;
            *)
                error="$opt is invalid (enter a yellow letter)."
                ;;
        esac
    done

    logout
}

ttyinit
