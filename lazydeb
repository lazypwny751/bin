#!/usr/bin/env bash
# https://stackoverflow.com/a/246128
DIR="$( cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
LIB="$DIR/lib/bash"
ANSIBLE="$DIR/ansible"
CODENAME="$(lsb_release -cs)"
ANSIBLE_PPA="http://ppa.launchpad.net/ansible/ansible/ubuntu cosmic main"
source "$LIB/ask"

install_ansible() {
    echo "deb $ANSIBLE_PPA" > /tmp/ansible.list
    sudo cp /tmp/ansible.list /etc/apt/sources.list.d/ansible.list
    echo "
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: SKS 1.1.6
Comment: Hostname: keyserver.ubuntu.com

mQINBFOXbTABEADKLcY3MYZyHIiCEu8cQ+0UzxZolTYZf8xZ06/d8xzUW/UBPTLVx/40IzWJ
EZU87GCYVXUhdYXECrFQKQOOEWQswBxOt26/g0nIrU0edZ9cCZ9o9+ZOsKDcScWNxWeclLr2
+YHdmX9eph+2p+zIPmhNJaaWV6/bSo1fBi7ganZFRAc13zO8jtQsYyIeoAFwjt1vbk9CifdF
hEchRVbwvZYhZDWfBZjhZ15UOunjo47gEkpK0PsWHY5N3/c75pGMwMTCjHMKno6KFzhdKLaz
/QgbNnpy1aMkA/LITeU6Pgg6iqofrSY3Fx73MCAb8EEytvSV/65wztKzexHjGYxhm5ygoET5
tPyXciX0+XzojkZAHzUEeT5z4kgL6OLyn+JQAyRDNnOJEkYmvwQveZuUjsYUkgc5DJdg6w7l
TgQHWObOENpXls3BDnphA4DJyc0PQODCxdSZo4ZXMLn5lE/0qvAJ6g/wntY/ee/vRKwy9iDM
OWQvihTIY/L70/TnE4qZdaNbOJEvW59LT6GBTrcU1MX2fS5hU/mQa2CNixSVZG98rba3tfNa
LDDNqivkcxtWryEWd0giBzzUS+MhtxhHm77YgxNVyyFn8bXb25/W+Jq+VvWWx2KD3ZwVD37X
8wIBRLVozoH0jHVW7jKTnf2z+D6FCM+pVlm8zV1upXbHbdaRqwARAQABtB9MYXVuY2hwYWQg
UFBBIGZvciBBbnNpYmxlLCBJbmMuiQI4BBMBAgAiBQJTl20wAhsDBgsJCAcDAgYVCAIJCgsE
FgIDAQIeAQIXgAAKCRCTxKP9e7nDZwzdD/9yFq+3ptLyWP1JN3RXsvTIJLhhjOqMMJCOocV0
G3slHeUtdIDmvd2RaS8PeFNSd9QFbUzka7pBXec3a7kgEVorty2/+cZSpEVHT26oAbJnoH7E
1YGii8bbnk9LqOCF/nLpasEqPKqtVzXz+vGB7G0ox8qmRm6JynrMeLBftYemxJ8e4fii6APJ
xE6FPz/AvgcN3BtBguseFwcga6lGcmp0JLofGhTbejfS9dW9bnCFJBtRfzUVd+Cb8aYuzV5z
gCJgqOBJHf0L6xDwn8UuzRfi0MWzEskuC/KxUJqVHMuTaLdrSeP1/czompetbsSHTfDklf/p
4EbSM9VqZFiKr17we0LdigAEv2JnL2Qj0oN3eRNU0sDJ3kZvh5qhnteNgSRM/el0Sly+34CR
ZzX25vd+pOTgwK6VFx3wvWfqn3pVNT9ASNalhogFXuBY2ukYJaiUTPsSR4+KHiD3eIhWyayB
GP+GRvGb5dVC29k4CjLvQM9lISmZrrxGmMGoV9S1dh7siZYECaVW0nKI95d6bBHaKH1g5HJ7
NEsVTwf8LRY/FFpLsEPVw4HNVqqqwhuJnSW70WQ3blh0RIX/+z9hAla+M0kix7r0lS89ZBdT
gwPuiCrkPRpoxi06ah/Q62uP3ZN4+dew1sBZdaC9kaKdOOWTqArVnaPObQgUUJFhY9wUsA==
=qlCh
-----END PGP PUBLIC KEY BLOCK-----
" > /tmp/ansible.key
    sudo apt-key add /tmp/ansible.key
    # The keyserver is not accessible if you're behind a proxy, hence the blob...
    # sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367
    sudo apt update && sudo apt install ansible
}

release_packages() {
    local distro="$(lsb_release --id --short)"
    local codename="$(lsb_release --codename --short)"

    case "$distro" in
	Debian|Ubuntu)
	    case "$codename" in
		"buster")
		    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/apt-all.yml" \
				     --extra-vars "ansible_become_pass=\"$PASS\""
		    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/buster-mssql.yml" \
				     --extra-vars "ansible_become_pass=\"$PASS\""
		    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/apt-az.yml" \
				     --extra-vars "ansible_become_pass=\"$PASS\""
		    ;;
		"bionic")
		    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/apt-all.yml" \
				     --extra-vars "ansible_become_pass=\"$PASS\""
		    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/apt-az.yml" \
				     --extra-vars "ansible_become_pass=\"$PASS\""
		    ;;
		*)
		    echo "$codename not supported."
		    ;;
	    esac
	    ;;
	*)
	    echo "$distro not supported."
	    ;;
    esac
}

hardware_packages() {
    local make="$(cat /sys/class/dmi/id/chassis_vendor)"
    local model="$(cat /sys/class/dmi/id/product_family)"

    case "$make" in
	"Apple Inc.")
	    case "$model" in
		MacBook*)
		    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/buster-mbp.yml" \
				     --extra-vars "ansible_become_pass=\"$PASS\""
		    ;;
	    esac
	    ;;
	"Lenovo Inc.")
	    case "$model" in
		ThinkPad*)
		    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/buster-tp.yml" \
				     --extra-vars "ansible_become_pass=\"$PASS\""
		    ;;
	    esac
	    ;;
    esac
}

agnostic_packages() {
    local emacs_version="$1" go_version="$2"

    if [[ -z "$emacs_version" ]]; then
	ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/apt-emacs.yml" \
			 --extra-vars "ansible_become_pass=\"$PASS\""
    else
	ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/apt-emacs.yml" \
			 --extra-vars "version=\"$emacs_version\"" \
			 --extra-vars "ansible_become_pass=\"$PASS\""
    fi

    if [[ -z "$go_version" ]]; then
	ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/go.yml" \
			 --extra-vars "ansible_become_pass=\"$PASS\""
    else
	ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/go.yml" \
			 --extra-vars "version=\"$go_version\"" \
			 --extra-vars "ansible_become_pass=\"$PASS\""
    fi

    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/conda.yml" && \
	export PATH="${HOME}/conda/bin:$PATH"
    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/nvm-node.yml"
    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/pip.yml"
    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/stumpwm.yml"

    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/apt-docker.yml" \
		     --extra-vars "ansible_become_pass=\"$PASS\""
    ansible-playbook -i "$ANSIBLE/hosts" "$ANSIBLE/snap.yml" \
		     --extra-vars "ansible_become_pass=\"$PASS\""
}

main() {
    while getopts ":e:g:" opt; do
	case $opt in
	    e) emacs_version="$OPTARG"
	       ;;
	    g) go_version="$OPTARG"
	       ;;
	    \?) echo "Invalid option -$OPTARG" >&2
		return 1
		;;
	esac
    done

    command -v ansible &> /dev/null || install_ansible
    read -resp "Enter sudo password: " PASS
    release_packages
    hardware_packages
    agnostic_packages "$emacs_version" "$go_version"
}

main "$@"
